Index: AWSCodeOSS/build-private/src/extensions/css-language-features/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/css-language-features/package.json
+++ AWSCodeOSS/build-private/src/extensions/css-language-features/package.json
@@ -997,7 +997,7 @@
     ]
   },
   "dependencies": {
-    "vscode-languageclient": "10.0.0-next.8",
+    "vscode-languageclient": "9.0.1",
     "vscode-uri": "^3.0.8"
   },
   "devDependencies": {
Index: AWSCodeOSS/build-private/src/extensions/css-language-features/server/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/css-language-features/server/package.json
+++ AWSCodeOSS/build-private/src/extensions/css-language-features/server/package.json
@@ -12,7 +12,7 @@
   "dependencies": {
     "@vscode/l10n": "^0.0.18",
     "vscode-css-languageservice": "^6.3.1",
-    "vscode-languageserver": "10.0.0-next.6",
+    "vscode-languageserver": "9.0.1",
     "vscode-uri": "^3.0.8"
   },
   "devDependencies": {
Index: AWSCodeOSS/build-private/src/extensions/html-language-features/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/html-language-features/package.json
+++ AWSCodeOSS/build-private/src/extensions/html-language-features/package.json
@@ -259,7 +259,7 @@
   },
   "dependencies": {
     "@vscode/extension-telemetry": "^0.9.0",
-    "vscode-languageclient": "10.0.0-next.8",
+    "vscode-languageclient": "9.0.1",
     "vscode-uri": "^3.0.8"
   },
   "devDependencies": {
Index: AWSCodeOSS/build-private/src/extensions/html-language-features/server/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/html-language-features/server/package.json
+++ AWSCodeOSS/build-private/src/extensions/html-language-features/server/package.json
@@ -12,7 +12,7 @@
     "@vscode/l10n": "^0.0.18",
     "vscode-css-languageservice": "^6.3.1",
     "vscode-html-languageservice": "^5.3.1",
-    "vscode-languageserver": "10.0.0-next.6",
+    "vscode-languageserver": "9.0.1",
     "vscode-languageserver-textdocument": "^1.0.12",
     "vscode-uri": "^3.0.8"
   },
Index: AWSCodeOSS/build-private/src/extensions/json-language-features/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/json-language-features/package.json
+++ AWSCodeOSS/build-private/src/extensions/json-language-features/package.json
@@ -163,7 +163,7 @@
   "dependencies": {
     "@vscode/extension-telemetry": "^0.9.0",
     "request-light": "^0.8.0",
-    "vscode-languageclient": "10.0.0-next.8"
+    "vscode-languageclient": "9.0.1"
   },
   "devDependencies": {
     "@types/node": "20.x"
Index: AWSCodeOSS/build-private/src/extensions/json-language-features/server/package.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/json-language-features/server/package.json
+++ AWSCodeOSS/build-private/src/extensions/json-language-features/server/package.json
@@ -16,7 +16,7 @@
     "jsonc-parser": "^3.3.1",
     "request-light": "^0.8.0",
     "vscode-json-languageservice": "^5.4.1",
-    "vscode-languageserver": "10.0.0-next.6",
+    "vscode-languageserver": "9.0.1",
     "vscode-uri": "^3.0.8"
   },
   "devDependencies": {
Index: AWSCodeOSS/build-private/src/extensions/css-language-features/client/src/browser/cssClientMain.ts
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/css-language-features/client/src/browser/cssClientMain.ts
+++ AWSCodeOSS/build-private/src/extensions/css-language-features/client/src/browser/cssClientMain.ts
@@ -9,6 +9,13 @@ import { startClient, LanguageClientCons
 import { LanguageClient } from 'vscode-languageclient/browser';
 import { registerDropOrPasteResourceSupport } from '../dropOrPaste/dropOrPasteResource';
 
+declare const Worker: {
+	new(stringUrl: string): any;
+};
+declare const TextDecoder: {
+	new(encoding?: string): { decode(buffer: ArrayBuffer): string };
+};
+
 let client: BaseLanguageClient | undefined;
 
 // this method is called when vs code is activated
@@ -19,7 +26,7 @@ export async function activate(context:
 		worker.postMessage({ i10lLocation: l10n.uri?.toString(false) ?? '' });
 
 		const newLanguageClient: LanguageClientConstructor = (id: string, name: string, clientOptions: LanguageClientOptions) => {
-			return new LanguageClient(id, name, worker, clientOptions);
+			return new LanguageClient(id, name, clientOptions, worker);
 		};
 
 		client = await startClient(context, newLanguageClient, { TextDecoder });
Index: AWSCodeOSS/build-private/src/extensions/css-language-features/client/tsconfig.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/css-language-features/client/tsconfig.json
+++ AWSCodeOSS/build-private/src/extensions/css-language-features/client/tsconfig.json
@@ -1,10 +1,7 @@
 {
 	"extends": "../../tsconfig.base.json",
 	"compilerOptions": {
-		"outDir": "./out",
-		"lib": [
-			"webworker"
-		]
+		"outDir": "./out"
 	},
 	"include": [
 		"src/**/*",
Index: AWSCodeOSS/build-private/src/extensions/html-language-features/client/src/browser/htmlClientMain.ts
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/html-language-features/client/src/browser/htmlClientMain.ts
+++ AWSCodeOSS/build-private/src/extensions/html-language-features/client/src/browser/htmlClientMain.ts
@@ -8,6 +8,13 @@ import { LanguageClientOptions } from 'v
 import { startClient, LanguageClientConstructor, AsyncDisposable } from '../htmlClient';
 import { LanguageClient } from 'vscode-languageclient/browser';
 
+declare const Worker: {
+	new(stringUrl: string): any;
+};
+declare const TextDecoder: {
+	new(encoding?: string): { decode(buffer: ArrayBuffer): string };
+};
+
 let client: AsyncDisposable | undefined;
 
 // this method is called when vs code is activated
@@ -18,7 +25,7 @@ export async function activate(context:
 		worker.postMessage({ i10lLocation: l10n.uri?.toString(false) ?? '' });
 
 		const newLanguageClient: LanguageClientConstructor = (id: string, name: string, clientOptions: LanguageClientOptions) => {
-			return new LanguageClient(id, name, worker, clientOptions);
+			return new LanguageClient(id, name, clientOptions, worker);
 		};
 
 		const timer = {
Index: AWSCodeOSS/build-private/src/extensions/html-language-features/client/tsconfig.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/html-language-features/client/tsconfig.json
+++ AWSCodeOSS/build-private/src/extensions/html-language-features/client/tsconfig.json
@@ -1,10 +1,7 @@
 {
 	"extends": "../../tsconfig.base.json",
 	"compilerOptions": {
-		"outDir": "./out",
-		"lib": [
-			"webworker"
-		]
+		"outDir": "./out"
 	},
 	"include": [
 		"src/**/*",
Index: AWSCodeOSS/build-private/src/extensions/json-language-features/client/src/browser/jsonClientMain.ts
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/json-language-features/client/src/browser/jsonClientMain.ts
+++ AWSCodeOSS/build-private/src/extensions/json-language-features/client/src/browser/jsonClientMain.ts
@@ -8,6 +8,12 @@ import { LanguageClientOptions } from 'v
 import { startClient, LanguageClientConstructor, SchemaRequestService, AsyncDisposable, languageServerDescription } from '../jsonClient';
 import { LanguageClient } from 'vscode-languageclient/browser';
 
+declare const Worker: {
+	new(stringUrl: string): any;
+};
+
+declare function fetch(uri: string, options: any): any;
+
 let client: AsyncDisposable | undefined;
 
 // this method is called when vs code is activated
@@ -18,7 +24,7 @@ export async function activate(context:
 		worker.postMessage({ i10lLocation: l10n.uri?.toString(false) ?? '' });
 
 		const newLanguageClient: LanguageClientConstructor = (id: string, name: string, clientOptions: LanguageClientOptions) => {
-			return new LanguageClient(id, name, worker, clientOptions);
+			return new LanguageClient(id, name, clientOptions, worker);
 		};
 
 		const schemaRequests: SchemaRequestService = {
Index: AWSCodeOSS/build-private/src/extensions/json-language-features/client/tsconfig.json
===================================================================
--- AWSCodeOSS.orig/build-private/src/extensions/json-language-features/client/tsconfig.json
+++ AWSCodeOSS/build-private/src/extensions/json-language-features/client/tsconfig.json
@@ -1,10 +1,7 @@
 {
 	"extends": "../../tsconfig.base.json",
 	"compilerOptions": {
-		"outDir": "./out",
-		"lib": [
-			"webworker"
-		]
+		"outDir": "./out"
 	},
 	"include": [
 		"src/**/*",
