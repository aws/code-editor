name: Create release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
    env:
      COMMIT_SHA: ${{ github.sha }}
      VERSION_NUM: ${{ github.event.inputs.version || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag format
        run: |
          if ! echo "$VERSION_NUM" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Tag $VERSION_NUM does not follow semantic version pattern (x.y.z). Skipping release."
            exit 78  # neutral exit code
          fi
          echo "Tag $VERSION_NUM follows valid semantic version pattern"

      - name: Check if tag is from release branch
        run: |
          # Get the branch that contains this tag
          BRANCHES=$(git branch -r --contains $COMMIT_SHA | grep -E 'origin/[0-9]+\.[0-9]+' || true)
          if [ -z "$BRANCHES" ]; then
            echo "Tag $VERSION_NUM is not from a *.* release branch. Skipping release."
            exit 78  # neutral exit code
          fi
          echo "Tag is from a valid release branch: $BRANCHES"

      - name: Download sagemaker artifacts by commit ID
        run: |
          gh run download --name "$COMMIT_SHA-code-editor-sagemaker-server-build" --name "$COMMIT_SHA-code-editor-sagemaker-server-src"

      - name: Check artifacts exist and rename
        run: |
          ls -la
          
          # Rename build artifact
          BUILD_TARBALL=$(find . -name "*build*.tar.gz" | head -1 || true)
          if [ -n "$BUILD_TARBALL" ]; then
            cp "$BUILD_TARBALL" "code-editor-sagemaker-${VERSION_NUM}.tar.gz"
            echo "Copied $BUILD_TARBALL to code-editor-sagemaker-${VERSION_NUM}.tar.gz"
          else
            echo "Error: No build artifacts found for commit $COMMIT_SHA"
            exit 1
          fi
          
          # Rename src artifact
          SRC_TARBALL=$(find . -name "*src*.tar.gz" | head -1 || true)
          if [ -n "$SRC_TARBALL" ]; then
            cp "$SRC_TARBALL" "code-editor-sagemaker-src-${VERSION_NUM}.tar.gz"
            echo "Copied $SRC_TARBALL to code-editor-sagemaker-src-${VERSION_NUM}.tar.gz"
          else
            echo "Error: No src artifacts found for commit $COMMIT_SHA"
            exit 1
          fi
      
      - name: Create GitHub release
        run: |
          # Check if release already exists. Needed when release created via new release in guthub ui
          if gh release view "$VERSION_NUM" > /dev/null 2>&1; then
            echo "Release for tag $VERSION_NUM already exists, uploading additional assets..."
            gh release upload "$VERSION_NUM" *.tar.gz --clobber
          else
            echo "Creating new release for tag $VERSION_NUM..."
            gh release create "$VERSION_NUM" *.tar.gz \
              --title "Release $VERSION_NUM" \
              --notes "Release $VERSION_NUM"
          fi
  handle-failures:
    name: Handle Failures
    runs-on: ubuntu-latest
    needs: release
    environment: release-workflow-env
    if: failure()
    permissions:
      id-token: write # Required for OIDC
    env:
      REPOSITORY: ${{ github.repository }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    steps:
      - name: Use role credentials for metrics
        id: aws-creds
        continue-on-error: ${{ env.REPOSITORY != 'aws/code-editor' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
      - name: Report failure
        if: steps.aws-creds.outcome == 'success'
        run: |
          aws cloudwatch put-metric-data \
            --namespace "GitHub/Workflows" \
            --metric-name "ExecutionsFailed" \
            --dimensions "Repository=${{ env.REPOSITORY }},Workflow=Release" \
            --value 1