name: Create release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download sagemaker artifacts by commit ID
        env:
          GH_TOKEN: ${{ github.token }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          # Find artifact by pattern
          ARTIFACT_ID=$(gh api repos/${{ github.repository }}/actions/artifacts \
            --jq ".artifacts[] | select(.name | test(\"$COMMIT_SHA-code-editor-sagemaker-server-build\")) | .id" \
            | head -1)
          
          if [ -n "$ARTIFACT_ID" ]; then
            curl -L -H "Authorization: Bearer $GH_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip" \
              -o artifact.zip
            unzip artifact.zip
          else
            echo "No artifact found matching pattern: $COMMIT_SHA-code-editor-sagemaker-server-build"
            exit 1
          fi

      - name: Check artifacts exist and rename
        run: |
          ls -la
          VERSION_NUM="${{ github.event.inputs.version || github.ref_name }}"
          TARBALL=$(ls *.tar.gz | head -1)
          if [ -z "$TARBALL" ]; then
            echo "Error: No build artifacts found for commit ${{ github.sha }}"
            exit 1
          fi
          mv "$TARBALL" "code-editor-sagemaker-${VERSION_NUM}.tar.gz"
          echo "Renamed $TARBALL to code-editor-sagemaker-${VERSION_NUM}.tar.gz"
      
      - name: Delete existing tag (if any)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ github.event.inputs.version || github.ref_name }}';
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
              console.log(`Deleted existing tag: ${tag}`);
            } catch (e) {
              if (e.status !== 404 && e.status !== 422) {
                throw e;
              }
              console.log(`Tag ${tag} does not exist or already deleted.`);
            }
      
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          files: '*.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}